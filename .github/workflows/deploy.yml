name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend/react-vite

      - name: List project files (debugging)
        run: ls -la
        working-directory: ./frontend/react-vite

      - name: Build project
        env:
          VITE_BASE_API: ${{ secrets.PUBLIC_IP_SERVER }}
        run: npm run build
        working-directory: ./frontend/react-vite

      - name: List build files (debugging)
        run: ls -la ./frontend/react-vite/dist
        working-directory: ./frontend/react-vite

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./frontend/react-vite/dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: "Production"
      url: "https://article-atlas-cha7c4e8e5ghhqdz.northeurope-01.azurewebsites.net/"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./frontend/react-vite/dist

      - name: List files after downloading artifact (debugging)
        run: ls -la ./frontend/react-vite/dist

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "article-atlas"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: ./frontend/react-vite/dist

      - name: Test SPARQL API
        run: curl -k -s -o /dev/null -w "%{http_code}" https://${{ secrets.SPARQL_API }} | grep -q "200"
        continue-on-error: true

      - name: Test Statistics API
        run: curl -k -s -o /dev/null -w "%{http_code}" https://${{ secrets.STATISTICS_API }} | grep -q "200"
        continue-on-error: true
